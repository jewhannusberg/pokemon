12 + 8
12 * 64
var << 12 * 75
12* 75 << var
12 + 8
12 * 64
12* 75 << var
x + 10
x = 50
x + 10
b <- 9
b
hello <- world <- 20
hello
world
assign("Hello", 50)
Hello
assign("Hello", 50)
Hello
rm(Hello)
Hello
dataLooper
# Read CSV file into R
MyData <- read.csv(file="../Thesis/Data/Sep01_2016/PUBLIC_PREDISPATCHIS_201609010030_20160901000150", header=TRUE, sep=",")
MyData <- read.csv(file="PUBLIC_PREDISPATCHIS_201609010030_20160901000150", header=TRUE, sep=",")
MyData <- read.csv(file="PUBLIC_PREDISPATCHIS_201609010030_20160901000150", header=TRUE, sep=",")
MyData <- read.csv(file="PUBLIC_PREDISPATCHIS_201609010030_20160901000150.CSV", header=TRUE, sep=",")
MyData <- read.csv(file="PUBLIC_PREDISPATCHIS_201609010030_20160901000150.CSV", header=TRUE, sep=",")
MyData <- read.csv(file="PUBLIC_PREDISPATCHIS_201609010030_20160901000150", header=TRUE, sep=",")
install.packages('tidyverse')
update.packages(ggplot2)
update.packages('ggplot2', 'readr', 'purrr', 'dplyr')
update.packages('ggplot2')
update.packages('readr')
update.packages('purrr')
update.packages('dplyr')
library(tidyverse)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
df <- ggplot2::mpg
ggplot(data = df) +
geom_point(mapping = aes(x = displ, y = hwy))
?mpg
ggplot(data = df) +
geom_point(mapping = aes(x = hwy, y = cyl))
ggplot(data = df) +
geom_point(mapping = aes(x = cyl, y = hwy))
?mpg
ggplot(data = df) +
geom_point(mapping = aes(x = class, y = drv))
ggplot(data = df) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = df) +
geom_point(mapping = aes(x = displ, y = hwy, color = class, size=class))
?geom_point
library(tidyverse)
df = read.csv('Pokemon.csv')
wd()
rm(df)
getwd()
df = read.csv('Documents/kaggle/pokemon/Pokemon.csv')
View(df)
?distinct
# not interested in mega evolutions right now
df = df %>%
distinct(X.)
df = read.csv('Documents/kaggle/pokemon/Pokemon.csv')
# not interested in mega evolutions right now
df = df %>%
distinct(X., .keep_all=TRUE)
shiny::runApp('Documents/kaggle/pokemon')
getwd()
setwd("/Users/youhancheery/Documents/kaggle/pokemon")
runApp()
getwd()
getwd()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
getwd()
runApp()
runApp()
getwd()
runApp()
runApp()
runApp()
# plot distribution of types in generation 1
gen1 <- df %>%
filter(Generation == 1)
ggplot(data = gen1, aes(Type.1)) + geom_bar()
ggplot(data = gen1, aes(Type.1)) +
geom_bar() +
scale_color_brewer(type = 'div', palette = 15, direction = 1) +
xlab('Primary Type') + ylab('Count') +
ggtitle('Primary Pokemon Types in Generation 1')
# plot frequency count of secondary types in generation 1
ggplot(data = gen1, aes(Type.2)) +
geom_bar() +
scale_color_brewer(type = 'div', palette = 15, direction = 1) +
xlab('Primary Type') + ylab('Count') +
ggtitle('Primary Pokemon Types in Generation 1')
# fill empty type rows with 'No Secondary'
df <- df %>%
mutate(if(Type.2 == '') {Type.2 == 'No Secondary'})
print(df[4])
print(df[4, :])
print(df[4,:])
print(df[4,])
# fill empty type rows with 'No Secondary'
df <- df %>%
mutate_if(Type.2 == '', Type.2 == 'No Secondary')
# replace empties with NAs. NA is easier to handle
df[df == ' '] <- NA
View(df)
# replace empties with NAs. NA is easier to handle
df[df == ''] <- NA
View(df)
install.packages('tidyr')
install.packages("tidyr")
df %>% replace(is.na('Type.2'), 'No Secondary')
View(df)
install.packages("magrittr")
# fill empty type rows with 'No Secondary'
df %>% replace(is.na('Type.2'), 'No Secondary')
library(magrittr)
# fill empty type rows with 'No Secondary'
df %>% replace(is.na('Type.2'), 'No Secondary')
# fill empty type rows with 'No Secondary'
df %>% replace(is.na('Type.2'), 'No Secondary')
View(df)
# fill empty type rows with 'No Secondary'
d[is.na(df$Type.2)] <- "No Secondary"
# fill empty type rows with 'No Secondary'
df[is.na(df$Type.2)] <- "No Secondary"
df <- df %>%
mutate_if(is.na(Type.2), funs(replace(., is.na(.), 'No secondary')))
library(tidyverse)
df <- df %>%
mutate_if(is.na(Type.2), funs(replace(., is.na(.), 'No secondary')))
View(df)
df <- df %>%
mutate_if(is.na('Type.2'), funs(replace(., is.na(.), 'No secondary')))
# plot frequency count of secondary types in generation 1
ggplot(data = gen1, aes(Type.2)) +
geom_bar() +
scale_color_brewer(type = 'div', palette = 15, direction = 1) +
xlab('Primary Type') + ylab('Count') +
ggtitle('Primary Pokemon Types in Generation 1')
shiny::runApp()
View(gen1)
runApp()
devtools::install_github("karthik/wesanderson")
install.packages("devtools")
devtools::install_github("karthik/wesanderson")
library(wesanderson)
wes_palette("FantasticFox1")
runApp()
runApp()
runApp()
ggplot(data = gen1, aes(Type.1)) +
geom_bar() +
scale_color_brewer(type = 'div', palette = 15, direction = 1) +
xlab('Primary Type') + ylab('Count') +
ggtitle('Primary Pokemon Types in Generation 1')
runApp()
library(ggplot2)
library(shinydashboard)
install.packages('shinydashboard')
runApp()
